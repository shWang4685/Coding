把账号权限完善，最好有页面操作，登录注册完善
	①有登录次数限制：
			在数据库里为每个人建个专门存错误次数的属性，登入对了清零，登入不对累计；
			三次不允许再登，spring在写个定时作业，每天00：00全部清零。 
			
	［missnumber］登录失败次数：登录成功就清0 失败就＋1
	［misstime］允许登录时间：这个时间如果大于当前时间 则不能登录
	失败失败－－累加结果 >＝3 则 misstime ＝ now+30分钟 （missnumber清0）
	登录成功  missnumber清0
	登录时   if（misstime>now）则不允许登录
	
	
	②也要有验证码输入验证，验证码可以使用patchca 
	
	
	



//begin:如果是第一次登录
    		if (dateLogin == null) {
				logger.info("第一次登录，所以上一次登录的时间是null");
		    	
				//begin:判断当前时间是否允许登录
	    		
	    		//获得当前时间
	    		Date dateNow = new Date();
	    		
	    		//如果现在的时间大于允许登录的时间
	    		if (dateAllowTime == null ||dateNow.getTime() > dateAllowTime.getTime()) {
					//可以登录
	    			//如果账号密码都对了
			    	if (num != 0) {
			    		//把错误次数清0
			    		intMissNumber = 0;
			    		//记录最新登录的时间
			    		dateLogin = new Date();
			    		//记录最新的允许登录时间
			    		dateAllowTime = new Date();
			    		
			    		//修改数据库中的miss_number错误记录的数目
						User user = new User();
						user.setId(intUserId);
						user.setMissTime(dateLogin);
						user.setMissNumber(intMissNumber);
						user.setAllowTime(dateAllowTime);
						
						int intFlag = userService.updateByPrimaryKeySelective(user);
				    	logger.info("intFlag:"+intFlag);
				    	//把id保存进session，在后面的文章发表、评论发表时候会用到
				    	HttpSession session = request.getSession();
				    	session.setAttribute("intUserId", intUserId);
				    		
				    	return Msg.success();
				    
				    //如果密码错了
					}else {
						//把错误次数+1
						intMissNumber = intMissNumber + 1;
						//修改数据库中的miss_number错误记录的数目
						User user = new User();
						user.setId(intUserId);
						user.setMissNumber(intMissNumber);
						int intFlag = userService.updateByPrimaryKeySelective(user);
				    	logger.info("密码错误的intFlag:"+intFlag);
						
						return Msg.error().add("errMsg", ErrEnum.LOGIN_ERROR.getErrorMessage());
					}
	    			
	    			
	    			
	    		//如果现在的时间小于或者等于允许登录的时间
				} else {
					//不可以登录
					logger.info("现在的时间小于或者等于允许登录的时间,不能登录！");
					long lngTime = dateAllowTime.getTime() - dateNow.getTime();
					String strTime = "请在"+lngTime+"时间后尝试！";
					logger.info("请在"+lngTime+"时间后尝试！");
					return Msg.error().add("errMsg", ErrEnum.ALLOW_LOGIN_ERROR.getErrorMessage()).add("errTime", strTime);
				}
	    		
	    		//end:判断当前时间是否允许登录
		    	
		    	//end:第一次登录
				
				
			//如果不是第一次登录
			} else {
				logger.info("该用户不是第一次登录，其最新登录时间为："+dateLogin);
				
				//begin:对错误次数的判断
	    		
	    		//判断错误次数是否大于等于3
	    		if (intMissNumber >= 3 ) {
					//已经登录失败了三次及以上，锁定账号，不允许登录
	    			//允许登录的时间加2分钟
	    			logger.info("允许登录的时间没有加2分钟前是:"+dateAllowTime);
	    			Date dateAfterAllowTime = new Date(dateAllowTime .getTime() + 120000);
	    			logger.info("允许登录的时间加2分钟后是:"+dateAfterAllowTime);
	    			//修改数据库中的miss_number错误记录的数目
	    			//把错误次数清0
	    		    intMissNumber = 0;
					User user = new User();
					user.setId(intUserId);
					user.setMissNumber(intMissNumber);
					user.setAllowTime(dateAfterAllowTime);		
					int intFlag = userService.updateByPrimaryKeySelective(user);
					logger.info("intFlag:"+intFlag);
					    	
	    			return Msg.error().add("errMsg", ErrEnum.LOGIN_ERROR.getErrorMessage());
	    			
	    		//错误次数小于三次，可以登录
				} else {
			    	/*//如果账号密码都对了
			    	if (num != 0) {*/
			    		
			    		//begin:判断当前时间是否允许登录
			    		
			    		//获得当前时间
			    		Date dateNow = new Date();
			    		
			    		//如果现在的时间大于允许登录的时间
			    		if (dateAllowTime == null ||dateNow.getTime() > dateAllowTime.getTime()) {
							//可以登录
			    			//如果账号密码都对了
					    	if (num != 0) {
					    		//把错误次数清0
					    		intMissNumber = 0;
					    		//记录最新登录的时间
					    		dateLogin = new Date();
					    		//记录最新的允许登录时间
					    		dateAllowTime = new Date();
					    		
					    		//修改数据库中的miss_number错误记录的数目
								User user = new User();
								user.setId(intUserId);
								user.setMissTime(dateLogin);
								user.setMissNumber(intMissNumber);
								user.setAllowTime(dateAllowTime);
								
								int intFlag = userService.updateByPrimaryKeySelective(user);
						    	logger.info("intFlag:"+intFlag);
						    	//把id保存进session，在后面的文章发表、评论发表时候会用到
						    	HttpSession session = request.getSession();
						    	session.setAttribute("intUserId", intUserId);
						    		
						    	return Msg.success();
						    
						    //如果密码错了
							}else {
								//把错误次数+1
								intMissNumber = intMissNumber + 1;
								//修改数据库中的miss_number错误记录的数目
								User user = new User();
								user.setId(intUserId);
								user.setMissNumber(intMissNumber);
								int intFlag = userService.updateByPrimaryKeySelective(user);
						    	logger.info("密码错误的intFlag:"+intFlag);
								
								return Msg.error().add("errMsg", ErrEnum.LOGIN_ERROR.getErrorMessage());
							}
			    			
			    			
			    			
			    		//如果现在的时间小于或者等于允许登录的时间
						} else {
							//不可以登录
							logger.info("现在的时间小于或者等于允许登录的时间,不能登录！");
							long lngTime = dateAllowTime.getTime() - dateNow.getTime();
							String strTime = "请在"+lngTime+"时间后尝试！";
							logger.info("请在"+lngTime+"时间后尝试！");
							return Msg.error().add("errMsg", ErrEnum.ALLOW_LOGIN_ERROR.getErrorMessage()).add("errTime", strTime);
						}
			    		
			    		//end:判断当前时间是否允许登录
			    		
				}
	    		
	    		//end:对错误次数的判断
				
			}
    		
    		//end:对能否登录时间的判断
	
	
